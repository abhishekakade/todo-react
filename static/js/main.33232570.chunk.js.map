{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","_this$props","this","props","item","handleChange","handleSubmit","editItem","react_default","a","createElement","className","onSubmit","type","name","placeholder","id","value","onChange","Component","TodoItem","title","handleDelete","handleEdit","onClick","TodoList","items","clearList","map","TodoItem_TodoItem","key","App","state","uuid","e","_this","setState","target","preventDefault","newItem","updatedItems","concat","Object","toConsumableArray","length","window","confirm","filteredItems","filter","selectedItem","find","console","log","TodoInput_TodoInput","TodoList_TodoList","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33232570.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class TodoInput extends Component {\r\n  render() {\r\n    const { item, handleChange, handleSubmit, editItem } = this.props;\r\n\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text bg-dark text-white\">\r\n                <i className=\"fas fa-book\" />\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize bg-gradient-dark\"\r\n              name=\"\"\r\n              placeholder=\"Add a To-Do\"\r\n              id=\"add-todo\"\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              editItem\r\n                ? \"btn btn-block btn-outline-dark mt-3\"\r\n                : \"btn btn-block btn-dark mt-3\"\r\n            }\r\n            type=\"submit\"\r\n            // onClick={this.handleClickFunc}\r\n          >\r\n            {editItem ? \"Edit Item\" : \"Add Item\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TodoItem extends Component {\r\n  render() {\r\n    const { title, handleDelete, handleEdit } = this.props;\r\n\r\n    return (\r\n      <li className=\"list-group-item text-capitalize d-flex justify-content-between my-2\">\r\n        <h6>{title}</h6>\r\n        <div className=\"todo-icon\">\r\n          <span className=\"mx-2 text-dark\" onClick={handleEdit}>\r\n            <i className=\"fas fa-pen\" />\r\n          </span>\r\n          <span className=\"mx-2 text-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\" />\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n// import TodoInput from './TodoInput';\r\n\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    const { items, clearList, handleDelete, handleEdit } = this.props;\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group my-5\">\r\n          <h3 className=\"text-capitalize text-center\">Todo List</h3>\r\n\r\n          {items.map(item => {\r\n            return (\r\n              <TodoItem\r\n                key={item.id}\r\n                title={item.title}\r\n                /* cannot run handleDelete(item.id) as it needs to be passed in as a reference. \r\n                Using an arrow function that returns handleDelete(item.id) is the proper way of doing this \r\n                because we are running an arrow function and that arrow function implicitly returns this reference. */\r\n                handleDelete={() => {\r\n                  handleDelete(item.id);\r\n                }}\r\n                handleEdit={() => {\r\n                  handleEdit(item.id);\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <button\r\n            onClick={clearList}\r\n            type=\"button\"\r\n            className=\"btn btn-danger btn-block text-capitalize mt-5\"\r\n          >\r\n            Clear List\r\n          </button>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport uuid from \"uuid\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    id: uuid(),\n    item: \"\",\n    editItem: false\n  };\n\n  handleChange = e => {\n    this.setState({\n      item: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.item\n    };\n\n    // console.log(newItem);\n\n    const updatedItems = [...this.state.items, newItem];\n\n    // if statement to avoid adding empty todo\n    if (this.state.item !== \"\") {\n      this.setState({\n        items: updatedItems,\n        item: \"\",\n        id: uuid(),\n        editItem: false\n      });\n    }\n  };\n\n  clearList = () => {\n    if (!this.state.items.length) {\n      this.setState({\n        items: []\n      });\n    } else {\n      if (\n        window.confirm(\n          \"Are you sure you want to delete all the items in your To Do List?\"\n        )\n      ) {\n        this.setState({\n          items: []\n        });\n      }\n    }\n  };\n\n  handleDelete = id => {\n    if (window.confirm(\"Are you sure you want to delete this to-do?\")) {\n      const filteredItems = this.state.items.filter(item => item.id !== id);\n      this.setState({\n        items: filteredItems\n      });\n    }\n  };\n\n  handleEdit = id => {\n    // console.log(id);\n    const filteredItems = this.state.items.filter(item => item.id !== id);\n\n    const selectedItem = this.state.items.find(item => item.id === id);\n\n    console.log(selectedItem);\n\n    this.setState({\n      items: filteredItems,\n      item: selectedItem.title,\n      editItem: true,\n      id: id\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto col-md-8 mt-4\">\n            <h3 className=\"text-capitalize text-center\">Todo Input</h3>\n\n            <TodoInput\n              item={this.state.item}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              editItem={this.state.editItem}\n            />\n\n            <TodoList\n              items={this.state.items}\n              clearList={this.clearList}\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}